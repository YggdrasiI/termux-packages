From aca0b94e74cdc4ce98df9c082fb8dfe8748f73ba Mon Sep 17 00:00:00 2001
From: Olaf Schulz <olaf_schulz@posteo.de>
Date: Wed, 11 Nov 2020 11:04:19 +0100
Subject: [PATCH 1/5] Bugfix for onion_websocket_vprintf and
 onion_websocket_write.

This commit resolves two bugs:
1. Return value of onion_websocket_write was not correct in all cases.
2. onion_websocket_vprintf uses va_list-variable twice if internal buffer
	 is too small.  (Every variable argument list can only be used one time.)

   My changes are oriented to onion_response_vprintf, which already
   resolves the problem.

The next commit will contain a modification of the websocket-example
which triggers bug 2.
---
 src/onion/websocket.c | 10 +++++++---
 1 file changed, 7 insertions(+), 3 deletions(-)

diff --git a/src/onion/websocket.c b/src/onion/websocket.c
index cf49bef..ef723f1 100644
--- a/src/onion/websocket.c
+++ b/src/onion/websocket.c
@@ -235,7 +235,7 @@ int onion_websocket_write(onion_websocket * ws, const char *buffer, size_t _len)
     tout[i & 1023] = buffer[i];
   }
 
-  return (*lpwriter) (ws->req, tout, len & 1023);
+  return (ret + (*lpwriter) (ws->req, tout, len & 1023));
 }
 
 /**
@@ -314,7 +314,11 @@ int onion_websocket_read(onion_websocket * ws, char *buffer, size_t len) {
   */
 int onion_websocket_vprintf(onion_websocket * ws, const char *fmt, va_list args) {
   char temp[512];
-  int l = vsnprintf(temp, sizeof(temp) - 1, fmt, args);
+  va_list argz; // required for second vsnprintf call
+  int l;
+  va_copy(argz, args);
+  l = vsnprintf(temp, sizeof(temp), fmt, argz);
+  va_end(argz);
   if (l < sizeof(temp))
     return onion_websocket_write(ws, temp, l);
   else {
@@ -326,7 +330,7 @@ int onion_websocket_vprintf(onion_websocket * ws, const char *fmt, va_list args)
       ONION_ERROR("Could not reserve %d bytes", l + 1);
       return -1;
     }
-    vsnprintf(buf, l, fmt, args);
+    l = vsnprintf(buf, l + 1, fmt, args);
     s = onion_websocket_write(ws, buf, l);
     onion_low_free(buf);
     return s;
-- 
2.29.2


From cb036bfea5f3885cb0b06723e6fedd7affcb8198 Mon Sep 17 00:00:00 2001
From: Olaf Schulz <olaf_schulz@posteo.de>
Date: Sat, 21 Nov 2020 00:59:28 +0100
Subject: [PATCH 2/5] Websocket header generation: Omit overflow of ssize_t
 variable in unrealistic case

---
 src/onion/websocket.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/onion/websocket.c b/src/onion/websocket.c
index ef723f1..7a95a8c 100644
--- a/src/onion/websocket.c
+++ b/src/onion/websocket.c
@@ -202,7 +202,7 @@ int onion_websocket_write(onion_websocket * ws, const char *buffer, size_t _len)
     } else {
       header[1] |= 127;
       int i;
-      int tlen = len;
+      ssize_t tlen = len;
       for (i = 0; i < 8; i++) {
         header[3 + 8 - i] = tlen & 0x0FF;
         tlen >>= 8;
-- 
2.29.2


From a50653e053af83382fc61f7d30e5b692baba16fa Mon Sep 17 00:00:00 2001
From: Olaf Schulz <olaf_schulz@posteo.de>
Date: Fri, 13 Nov 2020 12:40:02 +0100
Subject: [PATCH 3/5] CMake changes for build on Android/Termux

On Android we need to link to liblog but remove
linking on libpthread and librt.
---
 CMakeLists.txt           | 20 ++++++++++++++++++++
 src/onion/CMakeLists.txt |  2 ++
 src/onion/low.c          | 17 +++++++++++++++++
 3 files changed, 39 insertions(+)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index f4ba1da..5c1bcf0 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -17,8 +17,13 @@ SET(ONION_USE_TESTS true CACHE BOOL "Compile the tests")
 SET(ONION_EXAMPLES true CACHE BOOL "Compile the examples")
 SET(ONION_USE_BINDINGS_CPP true CACHE BOOL "Compile the CPP bindings")
 SET(ONION_POLLER default CACHE string "Default poller to use: default | epoll | libev | libevent")
+SET(TERMUX false CACHE BOOL "Compiling on Android/Boinc")
 ########
 
+if("${CMAKE_SYSTEM_NAME}" EQUAL "Android")  # True in Termux
+	SET(TERMUX TRUE)
+endif("${CMAKE_SYSTEM_NAME}" EQUAL "Android")
+
 set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}/CMakeModules")
 
 execute_process(
@@ -103,6 +108,20 @@ if (${ONION_USE_REDIS})
 	endif(HIREDIS_FOUND)
 endif(${ONION_USE_REDIS})
 
+if (${TERMUX})
+	add_definitions(-DTERMUX)
+	# Add folder with execinfo.h
+	#     include_directories(SYSTEM "${CMAKE_SOURCE_DIR}/../../onion-mpv-webui/include")
+
+	# Link extra library log on all targets
+	macro (add_executable _name)
+		# invoke built-in add_executable
+		_add_executable(${ARGV})
+		if (TARGET ${_name})
+			target_link_libraries(${_name} log)
+		endif()
+	endmacro()
+else (${TERMUX})
 if (${ONION_USE_PTHREADS})
 	find_library(PTHREADS_LIB NAMES pthread PATH ${LIBPATH})
 	if(PTHREADS_LIB)
@@ -112,6 +131,7 @@ if (${ONION_USE_PTHREADS})
 		message("pthreads not found. Threading is not supported.")
 	endif(PTHREADS_LIB)
 endif(${ONION_USE_PTHREADS})
+endif (${TERMUX})
 
 if (${ONION_USE_XML2})
 	find_package(LibXml2)
diff --git a/src/onion/CMakeLists.txt b/src/onion/CMakeLists.txt
index af1d8b9..511a5b3 100644
--- a/src/onion/CMakeLists.txt
+++ b/src/onion/CMakeLists.txt
@@ -13,7 +13,9 @@ set(SOURCES onion.c codecs.c dict.c low.c request.c response.c handler.c log.c s
 	)
 
 set(LIBRARIES)
+if (NOT ${TERMUX})
 LIST(APPEND LIBRARIES rt)
+endif (NOT ${TERMUX})
 
 ## optional add sources and libraries depeding on features
 
diff --git a/src/onion/low.c b/src/onion/low.c
index 87f376e..a30414f 100644
--- a/src/onion/low.c
+++ b/src/onion/low.c
@@ -35,6 +35,9 @@
 
 #ifdef HAVE_PTHREADS
 #include <pthread.h>
+#ifdef TERMUX
+#include <signal.h>
+#endif
 #endif
 
 #include "low.h"
@@ -58,7 +61,21 @@ static onion_low_memoryfailure_sigt *memoryfailure_onion_f
 /* the pointers to user provided routines for threads */
 static onion_low_pthread_create_sigt *thrcreate_onion_f = pthread_create;
 static onion_low_pthread_join_sigt *thrjoin_onion_f = pthread_join;
+#ifdef TERMUX
+void pthread_testcancel(void){
+	sigset_t waiting_mask;
+	sigpending(&waiting_mask);
+	if(sigismember (&waiting_mask, SIGUSR1)){
+		pthread_exit(0);
+	}
+}
+int pthread_cancel(pthread_t thread){
+	pthread_kill(thread, SIGUSR1);
+};
+static onion_low_pthread_cancel_sigt *thrcancel_onion_f = &pthread_cancel;
+#else
 static onion_low_pthread_cancel_sigt *thrcancel_onion_f = pthread_cancel;
+#endif
 static onion_low_pthread_detach_sigt *thrdetach_onion_f = pthread_detach;
 static onion_low_pthread_exit_sigt *threxit_onion_f = pthread_exit;
 static onion_low_pthread_sigmask_sigt *thrsigmask_onion_f = pthread_sigmask;
-- 
2.29.2


From 50d5f6113767da9f84a37fbcf2dc500a17e869df Mon Sep 17 00:00:00 2001
From: Olaf Schulz <yggtrash@googlemail.com>
Date: Wed, 25 Nov 2020 21:34:32 +0100
Subject: [PATCH 4/5] Add -DHAVE_PTHREADS in Termux builds.

---
 CMakeLists.txt | 6 ++++++
 1 file changed, 6 insertions(+)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 5c1bcf0..96e5f06 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -121,6 +121,12 @@ if (${TERMUX})
 			target_link_libraries(${_name} log)
 		endif()
 	endmacro()
+
+	# Add definition to simulate same effect as 
+	#find_library(PTHREADS_LIB NAMES pthread PATH ${LIBPATH})
+	# (most) pthread functions are build in on Bionic.
+	add_definitions(-DHAVE_PTHREADS)
+
 else (${TERMUX})
 if (${ONION_USE_PTHREADS})
 	find_library(PTHREADS_LIB NAMES pthread PATH ${LIBPATH})
-- 
2.29.2


From b614a8a627c2d1ddd7eb5a8ab9b4db126646125d Mon Sep 17 00:00:00 2001
From: Olaf Schulz <yggtrash@googlemail.com>
Date: Fri, 4 Dec 2020 16:47:49 +0100
Subject: [PATCH 5/5] Cmake: Android-env detection: Fix EQUAL to STREQUAL

---
 CMakeLists.txt | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 96e5f06..fb999fa 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -20,9 +20,9 @@ SET(ONION_POLLER default CACHE string "Default poller to use: default | epoll |
 SET(TERMUX false CACHE BOOL "Compiling on Android/Boinc")
 ########
 
-if("${CMAKE_SYSTEM_NAME}" EQUAL "Android")  # True in Termux
+if("${CMAKE_SYSTEM_NAME}" STREQUAL "Android")  # True in Termux
 	SET(TERMUX TRUE)
-endif("${CMAKE_SYSTEM_NAME}" EQUAL "Android")
+endif("${CMAKE_SYSTEM_NAME}" STREQUAL "Android")
 
 set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}/CMakeModules")
 
-- 
2.29.2

